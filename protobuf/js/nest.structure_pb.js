/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var weave_common_pb = require('./weave.common_pb.js');
goog.object.extend(proto, weave_common_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.nest.trait.structure.HomeInfoSettingsTrait', null, global);
goog.exportSymbol('proto.nest.trait.structure.HomeInfoSettingsTrait.HouseType', null, global);
goog.exportSymbol('proto.nest.trait.structure.HomeInfoSettingsTrait.MeasurementScale', null, global);
goog.exportSymbol('proto.nest.trait.structure.HomeInfoSettingsTrait.NumThermostats', null, global);
goog.exportSymbol('proto.nest.trait.structure.HomeInfoSettingsTrait.RenovationDate', null, global);
goog.exportSymbol('proto.nest.trait.structure.StructureInfoTrait', null, global);
goog.exportSymbol('proto.nest.trait.structure.StructureLocationTrait', null, global);
goog.exportSymbol('proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.structure.HomeInfoSettingsTrait = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.structure.HomeInfoSettingsTrait, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.structure.HomeInfoSettingsTrait.displayName = 'proto.nest.trait.structure.HomeInfoSettingsTrait';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.structure.StructureLocationTrait = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.structure.StructureLocationTrait, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.structure.StructureLocationTrait.displayName = 'proto.nest.trait.structure.StructureLocationTrait';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.displayName = 'proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.structure.StructureInfoTrait = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.structure.StructureInfoTrait, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.structure.StructureInfoTrait.displayName = 'proto.nest.trait.structure.StructureInfoTrait';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.structure.HomeInfoSettingsTrait.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.structure.HomeInfoSettingsTrait} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.toObject = function(includeInstance, msg) {
  var f, obj = {
    houseType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userSpecifiedNumThermostats: jspb.Message.getFieldWithDefault(msg, 2, 0),
    renovationDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    structureArea: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    measurementScale: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.structure.HomeInfoSettingsTrait}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.structure.HomeInfoSettingsTrait;
  return proto.nest.trait.structure.HomeInfoSettingsTrait.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.structure.HomeInfoSettingsTrait} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.structure.HomeInfoSettingsTrait}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.nest.trait.structure.HomeInfoSettingsTrait.HouseType} */ (reader.readEnum());
      msg.setHouseType(value);
      break;
    case 2:
      var value = /** @type {!proto.nest.trait.structure.HomeInfoSettingsTrait.NumThermostats} */ (reader.readEnum());
      msg.setUserSpecifiedNumThermostats(value);
      break;
    case 3:
      var value = /** @type {!proto.nest.trait.structure.HomeInfoSettingsTrait.RenovationDate} */ (reader.readEnum());
      msg.setRenovationDate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStructureArea(value);
      break;
    case 5:
      var value = /** @type {!proto.nest.trait.structure.HomeInfoSettingsTrait.MeasurementScale} */ (reader.readEnum());
      msg.setMeasurementScale(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.structure.HomeInfoSettingsTrait.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.structure.HomeInfoSettingsTrait} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHouseType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserSpecifiedNumThermostats();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRenovationDate();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStructureArea();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getMeasurementScale();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.HouseType = {
  HOUSE_TYPE_UNSPECIFIED: 0,
  HOUSE_TYPE_SINGLE_FAMILY: 1,
  HOUSE_TYPE_MULTI_FAMILY: 2,
  HOUSE_TYPE_CONDO: 3,
  HOUSE_TYPE_BUSINESS: 4
};

/**
 * @enum {number}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.MeasurementScale = {
  MEASUREMENT_SCALE_UNSPECIFIED: 0,
  MEASUREMENT_SCALE_METRIC: 1,
  MEASUREMENT_SCALE_IMPERIAL: 2
};

/**
 * @enum {number}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.NumThermostats = {
  NUM_THERMOSTATS_UNSPECIFIED: 0,
  NUM_THERMOSTATS_ONE: 1,
  NUM_THERMOSTATS_TWO: 2,
  NUM_THERMOSTATS_THREE: 3,
  NUM_THERMOSTATS_FOUR: 4,
  NUM_THERMOSTATS_FIVE_PLUS: 5
};

/**
 * @enum {number}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.RenovationDate = {
  RENOVATION_DATE_UNSPECIFIED: 0,
  RENOVATION_DATE_DONT_KNOW: 1,
  RENOVATION_DATE_PRE_1940: 2,
  RENOVATION_DATE_1940: 3,
  RENOVATION_DATE_1950: 4,
  RENOVATION_DATE_1960: 5,
  RENOVATION_DATE_1970: 6,
  RENOVATION_DATE_1980: 7,
  RENOVATION_DATE_1990: 8,
  RENOVATION_DATE_2000: 9,
  RENOVATION_DATE_2010: 10
};

/**
 * optional HouseType house_type = 1;
 * @return {!proto.nest.trait.structure.HomeInfoSettingsTrait.HouseType}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.getHouseType = function() {
  return /** @type {!proto.nest.trait.structure.HomeInfoSettingsTrait.HouseType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.nest.trait.structure.HomeInfoSettingsTrait.HouseType} value */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.setHouseType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional NumThermostats user_specified_num_thermostats = 2;
 * @return {!proto.nest.trait.structure.HomeInfoSettingsTrait.NumThermostats}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.getUserSpecifiedNumThermostats = function() {
  return /** @type {!proto.nest.trait.structure.HomeInfoSettingsTrait.NumThermostats} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.nest.trait.structure.HomeInfoSettingsTrait.NumThermostats} value */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.setUserSpecifiedNumThermostats = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional RenovationDate renovation_date = 3;
 * @return {!proto.nest.trait.structure.HomeInfoSettingsTrait.RenovationDate}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.getRenovationDate = function() {
  return /** @type {!proto.nest.trait.structure.HomeInfoSettingsTrait.RenovationDate} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.nest.trait.structure.HomeInfoSettingsTrait.RenovationDate} value */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.setRenovationDate = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional float structure_area = 4;
 * @return {number}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.getStructureArea = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.setStructureArea = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional MeasurementScale measurement_scale = 5;
 * @return {!proto.nest.trait.structure.HomeInfoSettingsTrait.MeasurementScale}
 */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.getMeasurementScale = function() {
  return /** @type {!proto.nest.trait.structure.HomeInfoSettingsTrait.MeasurementScale} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.nest.trait.structure.HomeInfoSettingsTrait.MeasurementScale} value */
proto.nest.trait.structure.HomeInfoSettingsTrait.prototype.setMeasurementScale = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.structure.StructureLocationTrait.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.structure.StructureLocationTrait} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.structure.StructureLocationTrait.toObject = function(includeInstance, msg) {
  var f, obj = {
    postalCode: (f = msg.getPostalCode()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    countryCode: (f = msg.getCountryCode()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    addressLines: jspb.Message.getFieldWithDefault(msg, 3, ""),
    city: (f = msg.getCity()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    state: (f = msg.getState()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    geoCoordinate: (f = msg.getGeoCoordinate()) && proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.structure.StructureLocationTrait}
 */
proto.nest.trait.structure.StructureLocationTrait.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.structure.StructureLocationTrait;
  return proto.nest.trait.structure.StructureLocationTrait.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.structure.StructureLocationTrait} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.structure.StructureLocationTrait}
 */
proto.nest.trait.structure.StructureLocationTrait.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setPostalCode(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCountryCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressLines(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCity(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 6:
      var value = new proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate;
      reader.readMessage(value,proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.deserializeBinaryFromReader);
      msg.setGeoCoordinate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.structure.StructureLocationTrait.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.structure.StructureLocationTrait} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.structure.StructureLocationTrait.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPostalCode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getCountryCode();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getAddressLines();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCity();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getGeoCoordinate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate}
 */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate;
  return proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate}
 */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLongitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float latitude = 1;
 * @return {number}
 */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.prototype.setLatitude = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float longitude = 2;
 * @return {number}
 */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate.prototype.setLongitude = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional google.protobuf.StringValue postal_code = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.getPostalCode = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.nest.trait.structure.StructureLocationTrait.prototype.setPostalCode = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.clearPostalCode = function() {
  this.setPostalCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.hasPostalCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.StringValue country_code = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.getCountryCode = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.nest.trait.structure.StructureLocationTrait.prototype.setCountryCode = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.clearCountryCode = function() {
  this.setCountryCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.hasCountryCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string address_lines = 3;
 * @return {string}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.getAddressLines = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.nest.trait.structure.StructureLocationTrait.prototype.setAddressLines = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.StringValue city = 4;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.getCity = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 4));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.nest.trait.structure.StructureLocationTrait.prototype.setCity = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.clearCity = function() {
  this.setCity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.hasCity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.StringValue state = 5;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.getState = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 5));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.nest.trait.structure.StructureLocationTrait.prototype.setState = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.clearState = function() {
  this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.hasState = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GeoCoordinate geo_coordinate = 6;
 * @return {?proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.getGeoCoordinate = function() {
  return /** @type{?proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate} */ (
    jspb.Message.getWrapperField(this, proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate, 6));
};


/** @param {?proto.nest.trait.structure.StructureLocationTrait.GeoCoordinate|undefined} value */
proto.nest.trait.structure.StructureLocationTrait.prototype.setGeoCoordinate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.clearGeoCoordinate = function() {
  this.setGeoCoordinate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.structure.StructureLocationTrait.prototype.hasGeoCoordinate = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.structure.StructureInfoTrait.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.structure.StructureInfoTrait} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.structure.StructureInfoTrait.toObject = function(includeInstance, msg) {
  var f, obj = {
    structureId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxNestGuardCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxNestSensorCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxNestConnectCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    primaryFabricId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pairerId: (f = msg.getPairerId()) && weave_common_pb.ResourceId.toObject(includeInstance, f),
    maxNestLockCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    maxNestMoonstoneCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    maxNestProtectCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    name: jspb.Message.getFieldWithDefault(msg, 10, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    hgId: (f = msg.getHgId()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    maxResourceCountsMap: (f = msg.getMaxResourceCountsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.structure.StructureInfoTrait}
 */
proto.nest.trait.structure.StructureInfoTrait.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.structure.StructureInfoTrait;
  return proto.nest.trait.structure.StructureInfoTrait.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.structure.StructureInfoTrait} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.structure.StructureInfoTrait}
 */
proto.nest.trait.structure.StructureInfoTrait.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructureId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxNestGuardCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxNestSensorCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxNestConnectCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPrimaryFabricId(value);
      break;
    case 6:
      var value = new weave_common_pb.ResourceId;
      reader.readMessage(value,weave_common_pb.ResourceId.deserializeBinaryFromReader);
      msg.setPairerId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxNestLockCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxNestMoonstoneCount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxNestProtectCount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 12:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setHgId(value);
      break;
    case 13:
      var value = msg.getMaxResourceCountsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readUint32, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.structure.StructureInfoTrait.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.structure.StructureInfoTrait} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.structure.StructureInfoTrait.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStructureId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxNestGuardCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMaxNestSensorCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMaxNestConnectCount();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getPrimaryFabricId();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getPairerId();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      weave_common_pb.ResourceId.serializeBinaryToWriter
    );
  }
  f = message.getMaxNestLockCount();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getMaxNestMoonstoneCount();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getMaxNestProtectCount();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getHgId();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getMaxResourceCountsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeUint32);
  }
};


/**
 * optional string structure_id = 1;
 * @return {string}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getStructureId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setStructureId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 max_nest_guard_count = 2;
 * @return {number}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getMaxNestGuardCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setMaxNestGuardCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 max_nest_sensor_count = 3;
 * @return {number}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getMaxNestSensorCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setMaxNestSensorCount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 max_nest_connect_count = 4;
 * @return {number}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getMaxNestConnectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setMaxNestConnectCount = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 primary_fabric_id = 5;
 * @return {number}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getPrimaryFabricId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setPrimaryFabricId = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional weave.common.ResourceId pairer_id = 6;
 * @return {?proto.weave.common.ResourceId}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getPairerId = function() {
  return /** @type{?proto.weave.common.ResourceId} */ (
    jspb.Message.getWrapperField(this, weave_common_pb.ResourceId, 6));
};


/** @param {?proto.weave.common.ResourceId|undefined} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setPairerId = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.clearPairerId = function() {
  this.setPairerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.hasPairerId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 max_nest_lock_count = 7;
 * @return {number}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getMaxNestLockCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setMaxNestLockCount = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 max_nest_moonstone_count = 8;
 * @return {number}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getMaxNestMoonstoneCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setMaxNestMoonstoneCount = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint32 max_nest_protect_count = 9;
 * @return {number}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getMaxNestProtectCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setMaxNestProtectCount = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string name = 10;
 * @return {string}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.StringValue hg_id = 12;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getHgId = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 12));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.nest.trait.structure.StructureInfoTrait.prototype.setHgId = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.clearHgId = function() {
  this.setHgId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.hasHgId = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * map<string, uint32> max_resource_counts = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.getMaxResourceCountsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.nest.trait.structure.StructureInfoTrait.prototype.clearMaxResourceCountsMap = function() {
  this.getMaxResourceCountsMap().clear();
};


goog.object.extend(exports, proto.nest.trait.structure);
